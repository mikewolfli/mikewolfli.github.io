{"meta":{"title":"Warm wind from Mike","subtitle":"Lemon Tree","description":"路漫漫其修远兮，吾将上下而求索","author":"mikewolfli","url":"http://mikewolfli.github.io"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2016-11-28T06:04:19.000Z","updated":"2016-12-01T08:58:50.723Z","comments":false,"path":"/404.html","permalink":"http://mikewolfli.github.io//404.html","excerpt":"","text":""},{"title":"About me","date":"2016-11-28T07:47:44.000Z","updated":"2017-03-17T05:08:40.702Z","comments":false,"path":"about-en/index.html","permalink":"http://mikewolfli.github.io/about-en/index.html","excerpt":"","text":"mikewolfli## mikewolfli@163.com13564785624 Profile Worked in industry 14 years . Be skillful in parts design and cataloging and managing the material data, also optimizing the workflow for department. Be skillful in using several computer assistance tools ( soldworks etc.). Be skillfull in developing tools with C/C++ and Python.Be familiar in several fields, such as data analysis , document parsing, back-end, website deploy etc. Skills Developing tools: Learning new knowledge and developing web or desktop tools with them smartl .(c/c++ or python) SAP interface: Developing other tools to read the data from SAP with nwrfcsdk(c/c++ or python) Deployment: Deploying web-sys on linux(like centos) with nginx or apache. 3D drawing: Drawing 3d model in solidworks.(or other 3d software) Technical C/C++ PYTHON AutoCAD Solidworks wxwidgets centos ExperienceFlowchart graph BT id1-->id2 id2-.->id3 id3-->id4 id4-->id5 id5-->id6 id6-->id7 id1[\"2003.7-2005.1 GFC elevator | Mechanical Engineer\"] id2[\"2005.2-2007.5 ThyssenKrupp Elevator Songjiang Plant | Mechanical Engineer\"] id3[\"2007.10-2008.2 ThyssenKrupp Elevator Songjiang Plant | Mechanical Engineer\"] id4[\"2008.3-2008.11 ThyssenKrupp Elevator Songjiang Plant | SAP PS key user\"] id5[\"2008.10--2010.4 ThyssenKrupp Elevator Songjiang Plant | SAP Project Engineer\"] id6[\"2010.5-2013.10: ThyssenKrupp Elevator Songjiang Plant | System Application Supervisor\"] id7[\"2013.11-present ThyssenKrupp Elevator Songjiang Plant | Data supervisor\"] Experience Description 2013.11~present ThyssenKrupp Elevator Songjiang Plant Data supervisor Optimize the workflow of department Develop the interface of external program with nwrfcsdk to read data from SAP(c/c++) Train the partner to program develop assistant tools with python or c/c++ 2010.5~2013.10:ThyssenKrupp Elevator Songjiang Plant System Application Supervisor Coordinate and deal with the data(WBS BOM) migration from PDM to SAP. The data migration from client 100 to client 110 for AP Template sys go-live. Organize packing-group to make packing list. Run POC report, and support FI,CO to analyse cost. Solve every month’s problem in business process. Provide the requirement of new function and make the function spec, and make the UAT sample and accept the new function 2008.10~2010.4 ThyssenKrupp Elevator Songjiang Plant SAP Project Engineer upload and analyse the WBS BOM every month . Support every monthly closing 2008.3~2008.11 ThyssenKrupp Elevator Songjiang Plant SAP PS key user Join the SAP Go-Live- edit the blue print and function spec. Edit the training doc and training the end user. Orgnize to maintain and upload the WBS BOM. SAP (ps Module) unit test, integration test, UAT test. 2007.10~2008.2 ThyssenKrupp Elevator Songjiang Plant Mechanical Engineer Drawing the GAD for the Oversea branches Technical support for the oversee branches 2005.2~2007.5 ThyssenKrupp Elevator Songjiang Plant Mechanical Engineer Edit the support and technical doc for branches(GAD,GADP) Drawing the GAD for the Oversea branches Develop the project execution tools for department with visual c++ and training the users to use them. 2003.7~2005.1 GFC elevator Mechanical Engineer Mechnical Designing(standard and non-standard) of elevator Make the calculation of elevator ###Project Experience Software on project management with vc++ and accesshttps://github.com/mikewolfli/PEMSys Software on workflow for department with c++(codeblocks+wxwidgets) and postgresql(depoyed on centos 6.5)https://github.com/mikewolfli/workflow Software for reference document library management with barcode and employee-card , developed with Pythonhttps://github.com/mikewolfli/contract_manager Software for non-standard materials dealing, developed with Pythonhttps://github.com/mikewolfli/IE_MBom Software for non-standard materials dealing from EDS 1 system, developed with Pythonhttps://github.com/mikewolfli/exman Others please visit my github! #Education 1999.09~2003.06 Wuhan Institute of Chemical technology(Now Wuhan Institute of Technology) Bachelor | Process Engineering &amp; Control FooterBlog netease(old) – http://mikewolfli.blog.163.com/CSDN(new)–http://blog.csdn.net/mikewolfli/github–https://github.com/mikewolflistackoverflow-http://stackoverflow.com/users/6313358/mikewolfli ###Footnodes 1.EDS system is a BOM auto-generated system, now only support car panel and COP. ↩"},{"title":"关于我","date":"2016-11-29T00:45:37.000Z","updated":"2017-03-17T05:08:16.741Z","comments":false,"path":"about-cn/index.html","permalink":"http://mikewolfli.github.io/about-cn/index.html","excerpt":"","text":"mikewolfli mikewolfli@163.com13564785624 个人介绍 14年经验，精通数据管理和流程优化和数据化。熟练使用各种绘图软件(solidworks等).熟练使用各种开发工具（Eclipse和语言（C++和PYTHON），熟悉数据分析，文档解析，后台开发，网站部署等。先后从事SAP,PDM,数据分析管理和流程改进工作。 个人技能 工具开发: 不断吸收新的知识，灵活运用开发WEBh和桌面辅助工具（c/c++和Python) SAP接口开发: 使用nwrfcsdk开发应用，读取SAP系统中项目信息。 应用部署: 在Centos中部署web应用（nginx或者apache)。 3D绘图: 使用solidworks绘制部件三维模型。 技术 C/C++ PYTHON AutoCAD Solidworks wxwidgets centos 工作经历Flowchart graph BT id1-->id2 id2-.->id3 id3-->id4 id4-->id5 id5-->id6 id6-->id7 id1[\"2003.7-2005.1 上海崇友电梯 | 机械工程师\"] id2[\"2005.2-2007.5 蒂森克虏伯电梯-松江工厂 | 机械工程师\"] id3[\"2007.10-2008.2 蒂森克虏伯电梯-松江工厂 | 机械工程师\"] id4[\"2008.3-2008.11 蒂森克虏伯电梯-松江工厂 | SAP PS模块关键用户\"] id5[\"2008.10--2010.4 蒂森克虏伯电梯-松江工厂 | SAP项目工程师\"] id6[\"2010.5-2013.10: 蒂森克虏伯电梯-松江工厂 | 系统应用主管\"] id7[\"2013.11-present 蒂森克虏伯电梯-松江工厂 | 数据主管\"] Experience Description 2013.11~present 蒂森克虏伯电梯-松江工厂 数据主管 部门流程优化 使用nwrfcsdk进行SAP外部接口开发(C++) 所开发工具的使用培训。 使用C/C++和Python开发各种辅助和数据分析工具 2010.5~2013.10:蒂森克虏伯电梯-松江工厂 系统应用主管 协助处理项目数据从PDM向SAP的导入。 AP Template阶段项目数据从服务器100向服务器110的迁移。 组织培训装箱小组SAP系统内分箱。 协助FI,CO模块每月Run POC报表。 解决业务人员每月SAP系统内业务操作中遇到的问题。 根据业务需求撰写和提交新的功能需求报告，并进行需求测试。 2008.10~2010.4 蒂森克虏伯电梯-松江工厂 SAP项目工程师 分析和上传每天配置完成的项目WBS BOM进SAP系统。 协助支持每月关帐。 2008.3~2008.11 蒂森克虏伯电梯-松江工厂 SAP PS模块关键用户 参与编写SAP上线SAP上线蓝图和功能文档。 编写培训文档并培训最终用户。 组织维护并上传项目的WBS BOM清单进SAP系统。 SAP（PS模块)单元测试，集成测试和UAT测试。 2007.10~2008.2 蒂森克虏伯电梯-松江工厂 机械工程师 为海外分公司绘制GAD图纸。 对海外分公司的技术支持。 2005.2~2007.5 蒂森克虏伯电梯-松江工厂 机械工程师 分公司技术支持：编写支持文档（GAD,GADP). 为海外分公司绘制GAD图纸。 开发项目处理辅助软件PEMSys(vc++ access),并培训用户。 2003.7~2005.1 上海崇友电梯 机械工程师 电梯部件机械设计（标准和非标）。 编写电梯计算书。 ###项目经验 合同处理软件PEMSys(使用VC++开发，数据库是ACCESS)https://github.com/mikewolfli/PEMSys 部门工作流流程软件workflow(使用C++开发，IDE-CODEBLOCKS,数据库是postgresql-部署在centos6.5)https://github.com/mikewolfli/workflow 资料室合同文档借阅管理软件，通过二维码和员工卡进行操作.(使用python开发，数据库同2)https://github.com/mikewolfli/contract_manager 非标物料处理流程软件。（使用python开发，数据库同2)https://github.com/mikewolfli/IE_MBom EDS 1 非标物料处理流程软件。（使用Python开发，数据库同2）。https://github.com/mikewolfli/exman 其他请访问我的github! ###教育经历 1999.9~2003.6 武汉化工学院(现武汉工程大学) 本科|学士 过程装备与控制工程 备注博客 网易博客(已停止更新) – http://mikewolfli.blog.163.com/CSDN博客(新)–http://blog.csdn.net/mikewolfli/github–https://github.com/mikewolflistackoverflow-http://stackoverflow.com/users/6313358/mikewolfli ###注： 1.EDS系统是目前公司使用的项目BOM自动生成系统，目前仅支持轿壁和操纵箱。—— ↩"},{"title":"categories","date":"2016-11-30T04:16:05.707Z","updated":"2016-11-30T04:16:05.707Z","comments":true,"path":"categories/index.html","permalink":"http://mikewolfli.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2016-11-30T04:16:05.707Z","updated":"2016-11-30T04:16:05.707Z","comments":true,"path":"tags/index.html","permalink":"http://mikewolfli.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"How is internet of things used in the Elevator Industry","slug":"How-is-internet-of-things-used-in-the-Elevator-Industry","date":"2017-03-10T06:29:00.000Z","updated":"2017-03-17T04:50:00.700Z","comments":true,"path":"2017/03/10/How-is-internet-of-things-used-in-the-Elevator-Industry/","link":"","permalink":"http://mikewolfli.github.io/2017/03/10/How-is-internet-of-things-used-in-the-Elevator-Industry/","excerpt":"","text":"Architecture diagram Thinking sparkData Center It is based on a database(postgresql) cluster based on the ubuntu server. In data center, it stores the information of every project: location, parametaers(elevator model, speed, load, etc.), running information, customer’s info,bom tree of every unit, erp info, mes info, etc. According the unit running information, you can generate a leveling strategy and rewrite to the unit controlling system to optimize the runnint efficiency. Application Servers It is based on Ubuntu server. The erp system, mes system and restweb serve are deployed in it. Gateway It is a IOT gateway.(This is the key device of the internet of things) Its operate system is openwrt.(2 core cpu, 128M Rom, 256M RAM) Through it, running information of every unis is uploaded to database in data center. The optimized leveling strategy is writed into units controlling system. The elevator’s quantity, connecting to it, has a max value. So one project has more than one. Client It may be a web-based client, or a mobile app in phone. Through it, customer can call one unit to level on the stop when customer want to go out from her/his location. But the priority of this calling command is less than it from the landing.","categories":[{"name":"Elevator","slug":"Elevator","permalink":"http://mikewolfli.github.io/categories/Elevator/"}],"tags":[{"name":"IOT, Elevator","slug":"IOT-Elevator","permalink":"http://mikewolfli.github.io/tags/IOT-Elevator/"}]},{"title":"How to invoke SAP RFC function by external program with nwrfcsdk","slug":"How-to-invoke-SAP-RFC-function-by-external-program-with-nwrfcsdk","date":"2016-12-22T00:42:13.000Z","updated":"2016-12-23T03:32:03.533Z","comments":true,"path":"2016/12/22/How-to-invoke-SAP-RFC-function-by-external-program-with-nwrfcsdk/","link":"","permalink":"http://mikewolfli.github.io/2016/12/22/How-to-invoke-SAP-RFC-function-by-external-program-with-nwrfcsdk/","excerpt":"","text":"cpp invoke nwrfc sdk The whole code is in my gistnwrfc sdk , you can git download from here String convertsap uc to wxString1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950 wxString sapucTostring(SAP_UC * s_ucs, int length)&#123; RFC_RC rc; RFC_ERROR_INFO errorInfo; wxString str; if(length==0) return wxEmptyString; if(length == -1) length = strlenU(s_ucs); unsigned int utf8Size = length * 2; char *utf8 = (char*) malloc(utf8Size + 1); utf8[0] = '\\0'; unsigned int resultLen = 0; rc = RfcSAPUCToUTF8(s_ucs, length, (RFC_BYTE*) utf8, &amp;utf8Size, &amp;resultLen, &amp;errorInfo); int i=0; while (rc != RFC_OK) &#123; // TODO: throw wrapError if(rc==RFC_BUFFER_TOO_SMALL) &#123; i+=8; utf8Size = (length+i) * 2; free(utf8); utf8 = (char*) malloc(utf8Size + 1); utf8[0] = '\\0'; rc = RfcSAPUCToUTF8(s_ucs, length, (RFC_BYTE*) utf8, &amp;utf8Size, &amp;resultLen, &amp;errorInfo); &#125; else &#123; errorHandling(rc, cU(\"sap uc to string\"), &amp;errorInfo, NULL); return \"error\"; &#125; &#125; str = wxString(utf8,wxConvUTF8); free(utf8); return str;&#125; wxString to sap uc1234567891011121314151617181920212223242526SAP_UC * stringTosapuc(wxString &amp;str)&#123; RFC_RC rc; SAP_UC *sapuc; unsigned int sapucSize, resultLen = 0; RFC_ERROR_INFO errorInfo; const char *cStr = str.mb_str(wxConvUTF8); sapucSize = strlen(cStr) + 1; sapuc = mallocU(sapucSize); memsetU(sapuc, 0, sapucSize); rc = RfcUTF8ToSAPUC((RFC_BYTE*)cStr, strlen(cStr), sapuc, &amp;sapucSize, &amp;resultLen, &amp;errorInfo); if (rc != RFC_OK) &#123; // FIXME: error handling errorHandling(rc, cU(\"string to sap_uc\"), &amp;errorInfo, NULL); return cU(\"error\"); &#125; return sapuc;&#125; Establish a pool class to store the dataset from the result of RFC Function123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869class Str_Line&#123;public: Str_Line() &#123; cols = 0; //columns label ptr num_cols=0;//column's quantity &#125; Str_Line(int _col_num) &#123; num_cols = _col_num; if(_col_num &gt;0) cols = new wxString[num_cols]; &#125; ~Str_Line() &#123; if (cols) delete[] cols; &#125; wxString *cols; int num_cols;&#125;;class Value_Pool&#123;public: Value_Pool(int initialLines, bool _dic=false); ~Value_Pool(); Str_Line *operator[] (int line) &#123; return Get_Value(line); &#125; Str_Line *Get_Value(int lineNo); Str_Line *Get_Name() &#123; return ptr_name; &#125; void Delete(int lineNo); wxString get_value_by_name(wxString str, Str_Line* p_str); wxString get_value_by_index(int i_col, Str_Line* p_str); int find_col_name(wxString str); int Find_row_value(wxString str, int i_col, int i_start=0); wxArrayInt find_row_value_array(wxString str, int i_col, int i_start=0); int Get_Same_Count(wxString str, int i_col); bool is_dict() &#123; return is_dic; &#125; int GetNumOfRows() &#123; return num_rows; &#125;private: Str_Line * ptr_name;// store the headers Str_Line **ptr_value;// store the values bool is_dic; int num_rows;&#125;; C++ class to communicate with RFC Function Because in sap, all rfc function is based on the inner table to run. If you invoke the rfc function , first , you must fill the cases in the import table(inner table), then run the function , at last, get the result in the export table(inner table). 12345678910111213141516171819202122232425262728293031323334353637383940class Rfc_Communication&#123;public: Rfc_Communication(); virtual ~Rfc_Communication(); RFC_FUNCTION_HANDLE Create_Function(wxString function_name,RFC_FUNCTION_DESC_HANDLE&amp; funhandle_desc); RFC_RC fillFunctionParameter(RFC_FUNCTION_DESC_HANDLE funcDesc, RFC_FUNCTION_HANDLE container, wxString v_name, Value_Pool * v_value);//list cases fill RFC_RC fillFunctionParameter(RFC_FUNCTION_DESC_HANDLE funcDesc, RFC_FUNCTION_HANDLE container, wxString v_name, wxString s_value);//single case fill RFC_RC RunFunction(RFC_FUNCTION_HANDLE fun_handle); RFC_RC DestroyFunction(RFC_FUNCTION_HANDLE fun_handle); Value_Pool* GetResult(wxString result_name, RFC_FUNCTION_DESC_HANDLE fun_handle_desc, RFC_FUNCTION_HANDLE fun_handle); RFC_RC rfc_connect(); void rfc_closed(); bool rfc_check_connect(); wxString str_result;protected:private: RFC_CONNECTION_HANDLE connection; RFC_ERROR_INFO errorInfo; SAP_UC* fillString(wxString str); wxString wrapString(SAP_UC * uc,int length =-1, bool rstrip=false); RFC_RC lookupMetaData(wxString function_name,RFC_FUNCTION_DESC_HANDLE &amp;funhandle_desc); RFC_RC fillVariable(RFCTYPE typ, RFC_FUNCTION_HANDLE container, SAP_UC* cName, Value_Pool * v_value, wxString str, RFC_TYPE_DESC_HANDLE typeDesc); RFC_RC fillStructureField(RFC_TYPE_DESC_HANDLE typeDesc, RFC_STRUCTURE_HANDLE container, SAP_UC * name, wxString s_value); RFC_RC fillTable(RFC_TYPE_DESC_HANDLE typeDesc, RFC_TABLE_HANDLE container, Value_Pool* value); RFC_RC fillField(RFCTYPE typ, DATA_CONTAINER_HANDLE container, SAP_UC* name, wxString s_value); Value_Pool* wrapResult(RFC_FUNCTION_DESC_HANDLE functionDescHandle, RFC_FUNCTION_HANDLE functionHandle, wxString varial_name, bool rstrip=false); void wrapStructure(RFC_TYPE_DESC_HANDLE typeDesc, RFC_STRUCTURE_HANDLE structHandle, Str_Line* line_value=NULL,bool _withname=false, Str_Line* line_name=NULL, bool rstrip=false); Value_Pool* wrapVariable(RFCTYPE typ, RFC_FUNCTION_HANDLE functionHandle, SAP_UC* cName, unsigned int cLen, RFC_TYPE_DESC_HANDLE typeDesc, bool rstrip=false); wxString wrapField(RFCTYPE typ, RFC_STRUCTURE_HANDLE functionHandle, SAP_UC* cName, unsigned int cLen, bool rstrip=false);&#125;; sample - how to use this class to invoke the rfc functionthis is rfc function def Function id : ZAP_PS_MATERIAL_INFOimport: IT_CE_MARA field id type length decimal description MATNR CHAR 18 Material Number WERKS CHAR 4 Plant CE_SPRAS field id type length decimal description Language CHAR 1 Language Key export: OT_CE_MARA field id type length decimal description MATNR CHAR 18 0 Material Number MAKTG CHAR 40 0 Material description in upper case for matchcodes MAKTX CHAR 40 0 Material Description (Short Text) SPRAS LANG 1 0 Language Key BRGEW QUAN 13 3 Gross Weight MEINS UNIT 3 0 Base Unit of Measure MTART CHAR 4 0 Material Type NORMT CHAR 18 0 Industry Standard Description (such as ANSI or ISO) BISMT CHAR 18 0 Old material number ZEINR CHAR 22 0 Document number (without document management system) GROES CHAR 32 0 Size/dimensions LGFSB CHAR 4 0 Default storage location for external procurement LGPRO CHAR 4 0 Issue Storage Location DISPO CHAR 3 0 MRP Controller (Materials Planner) SBDKZ CHAR 1 0 Dependent requirements ind. for individual and coll. reqmts FEVOR CHAR 3 0 Production scheduler SOBSK CHAR 2 0 Special Procurement Type for Costing BESKZ CHAR 1 0 Procurement Type SOBSL CHAR 2 0 Special procurement type MATGR CHAR 20 0 Group of Materials for Transition Matrix MFRGR CHAR Material freight group WERKS CHAR 4 0 Plant VPRSV CHAR 1 0 Price control indicator BWTAR CHAR 10 0 Valuation Type BWKEY CHAR 4 0 Valuation Area BKLAS CHAR 4 0 Valuation Class TDLINE CHAR 255 0 Material master Basic Data Text As above, the IT_CE_MARA, CE_SPRAS, OT_CE_MARA are structure. Invoke code 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869void rfctestDialog::OnButton1Click(wxCommandEvent&amp; event)&#123; if(!sap_conn-&gt;rfc_check_connect()) sap_conn-&gt;rfc_connect(); Value_Pool* mat_value=new Value_Pool(1, true); // this is filled innner table Str_Line * line= mat_value-&gt;Get_Name(); line-&gt;cols= new wxString[2]; line-&gt;num_cols = 2; wxString str = \"MATNR\"; line-&gt;cols[0] = str; str = \"WERKS\"; line-&gt;cols[1] = str; line = mat_value-&gt;Get_Value(0); line-&gt;num_cols = 2; line-&gt;cols = new wxString[2]; str = \"330040240\"; // str = \"200000051\"; line-&gt;cols[0] = str; str = \"2101\"; line-&gt;cols[1] = str; wxString s_lang = \"1\"; Value_Pool * pool_result; RFC_FUNCTION_DESC_HANDLE fun_handle_desc; RFC_FUNCTION_HANDLE fun_handle; fun_handle = sap_conn-&gt;Create_Function(wxT(\"ZAP_PS_MATERIAL_INFO\"),fun_handle_desc); sap_conn-&gt;fillFunctionParameter(fun_handle_desc,fun_handle,wxT(\"IT_CE_MARA\"),mat_value);//fill query table sap_conn-&gt;RunFunction(fun_handle); pool_result = sap_conn-&gt;GetResult(wxT(\"OT_CE_MARA\"),fun_handle_desc,fun_handle);//get result table sap_conn-&gt;DestroyFunction(fun_handle); if(pool_result) &#123; int i_row = pool_result-&gt;GetNumOfRows(); str.Empty(); Str_Line* line_head= pool_result-&gt;Get_Name(); for(int i=0; i&lt;i_row; i++) &#123; Str_Line * line = pool_result-&gt;Get_Value(i); int i_col = line-&gt;num_cols; for(int j=0; j&lt;i_col; j++) &#123; str = str+line_head-&gt;cols[j]+wxT(\":\")+line-&gt;cols[j]+wxT(\"\\n\"); &#125; &#125; &#125; tc_result-&gt;SetValue(str);&#125; Python invoke RFC Function This must install the pyRFC.How to intall it , you can according to linkHow to invoke it : 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061...import pyrfc... def check_in_sap(self): self.nstd_mat_list=[] self.nstd_app_id='' self.hibe_mats=[] ''' read the user and login parameters from a cfg file ''' logger.info(\"logining in SAP...\") config = ConfigParser() config.read('sapnwrfc.cfg') para_conn = config._sections['connection'] para_conn['user'] = base64.b64decode(para_conn['user']).decode() para_conn['passwd'] = base64.b64decode(para_conn['passwd']).decode() mats = self.mat_items.keys() try: conn = pyrfc.Connection(**para_conn) imp = [] for mat in mats: #loop to fill the query list line = dict(MATNR=mat, WERKS='2101') imp.append(line) logger.info(\"正在调用RFC函数...\") result = conn.call('ZAP_PS_MATERIAL_INFO', IT_CE_MARA=imp, CE_SPRAS='1') std_mats=[] for re in result['OT_CE_MARA']: #loop to read the result line std_mats.append(re['MATNR']) if re['BKLAS']=='3030' and re['MATNR'] not in self.hibe_mats: self.hibe_mats.append(re['MATNR']) for mat in mats: if mat not in std_mats: logger.info(\"标记非标物料:\"+mat) self.nstd_mat_list.append(mat) self.mark_nstd_mat(mat, True) else: self.mark_nstd_mat(mat, False) logger.info(\"非标物料确认完成，共计\"+str(len(self.nstd_mat_list))+\"个非标物料。\") except pyrfc.CommunicationError: logger.error(\"无法连接服务器\") return -1 except pyrfc.LogonError: logger.error(\"无法登陆，帐户密码错误！\") return -1 except (pyrfc.ABAPApplicationError, pyrfc.ABAPRuntimeError): logger.error(\"函数执行错误。\") return -1 conn.close() return len(self.nstd_mat_list) Reference node-rfc: https://github.com/SAP/node-rfc pyRFC: https://github.com/SAP/PyRFC","categories":[{"name":"SAP","slug":"SAP","permalink":"http://mikewolfli.github.io/categories/SAP/"}],"tags":[{"name":"SAP,RFC,c++,Python","slug":"SAP-RFC-c-Python","permalink":"http://mikewolfli.github.io/tags/SAP-RFC-c-Python/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-11-30T04:16:05.707Z","updated":"2016-11-30T04:16:05.707Z","comments":true,"path":"2016/11/30/hello-world/","link":"","permalink":"http://mikewolfli.github.io/2016/11/30/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://mikewolfli.github.io/categories/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://mikewolfli.github.io/tags/hexo/"}]}]}